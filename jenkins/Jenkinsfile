node {
    
    // Define environment variables
    env.CI = 'true'

    try {

        stage('Checkout') {
            echo 'Checking out source code...'
            checkout scm
        }

        stage("Build") {

            echo "Build .pyc..."
            sh "pwd"
            sh "ls -a"

            docker.image('python:2-alpine').inside() {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            }

        }

        stage ("Test") {

            echo "Run Unit Test";

            docker.image('qnib/pytest').inside() {

                sh 'python -m py_compile sources/add2vals.py sources/calc.py'

            }

        }

    } catch (Exception e) {
        
        currentBuild.result = 'FAILURE'

        throw e

    } finally {

        if (currentBuild.result != 'FAILURE') {
            archiveArtifacts 'sources'
        }

    }
    

}